package admin

import (
	"fmt"
	"github.com/TheLab-ms/conway/modules/bootstrap"
	"strconv"
	"time"
)

const timeFormat = "Mon, Jan 2 2006 at 15:04 MST"

type member struct {
	ID                     int64
	Name                   string
	Email                  string
	Confirmed              bool
	Created                int64
	AdminNotes             string
	Leadership             bool
	NonBillable            bool
	FobID                  *int64
	StripeSubID            *string
	StripeStatus           *string
	PaypalSubID            *string
	PaypalPrice            *float64
	PaypalLastPayment      *int64
	DiscountType           *string
	RootFamilyEmail        *string
	BuildingAccessApprover *string
}

templ renderSingleMember(member *member) {
	@bootstrap.View() {
		@adminNav()
		<div class="container my-5">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Basic Info</h5>
					<h6 class="card-subtitle mb-3 text-muted">Account created on { time.Unix(member.Created, 0).Format(timeFormat) }</h6>
					<form method="post" action={ templ.URL(fmt.Sprintf("/admin/members/%d/updates/basics", member.ID)) } id="basic-info-form">
						<div class="form-floating mb-3">
							<input type="text" class="form-control" id="name" name="name" value={ member.Name }/>
							<label for="name" class="form-label">Name</label>
						</div>
						<div class="input-group mb-3">
							<div class="form-floating">
								<input type="email" class="form-control" id="email" name="email" value={ member.Email }/>
								<label for="email">Email</label>
							</div>
							<div class="input-group-text">
								<label class="form-check-label" for="confirmed" style="margin-right: 5px;">Confirmed</label>
								<input type="checkbox" class="form-check-input mt-0" id="confirmed" name="confirmed" checked?={ member.Confirmed }/>
							</div>
						</div>
						<div class="form-floating mb-3">
							<input type="number" class="form-control" id="fob_id" name="fob_id" value={ strconv.FormatInt(*member.FobID, 10) }/>
							<label for="fob_id" class="form-label">Keyfob ID</label>
						</div>
						<div class="form-floating mb-3">
							<textarea class="form-control" id="admin_notes" name="admin_notes" style="height: 100px">{ member.AdminNotes }</textarea>
							<label for="admin_notes" class="form-label">Admin Notes</label>
						</div>
						<button type="submit" class="btn btn-primary">Save</button>
						<button type="button" class="btn btn-secondary" onclick="document.getElementById('delete-account-link').style.display='block'">Delete</button>
					</form>
					<form method="post" action={ templ.URL(fmt.Sprintf("/admin/members/%d/delete", member.ID)) }>
						<button type="submit" class="btn btn-danger mt-3" id="delete-account-link" style="display:none;">Confirm Delete</button>
					</form>
				</div>
			</div>
			<div class="card mt-3">
				<div class="card-body">
					<h5 class="card-title mb-4">
						Building Access
						if member.BuildingAccessApprover == nil || *member.BuildingAccessApprover == "" {
							<span class="badge text-bg-danger">!</span>
						}
					</h5>
					if member.BuildingAccessApprover == nil || *member.BuildingAccessApprover == "" {
						<form method="post" action={ templ.URL(fmt.Sprintf("/admin/members/%d/updates/building_access", member.ID)) }>
							<input type="hidden" value="true" name="approved"/>
							<h6 class="card-subtitle mb-3 text-muted">Not Approved</h6>
							<button type="submit" class="btn btn-primary">Approve</button>
						</form>
					} else {
						<h6 class="card-subtitle mb-3 text-muted">Approved By: <strong>{ *member.BuildingAccessApprover }</strong></h6>
						<form method="post" action={ templ.URL(fmt.Sprintf("/admin/members/%d/updates/building_access", member.ID)) }>
							<input type="hidden" value="false" name="approved"/>
							<button type="submit" class="btn btn-secondary">Revoke</button>
						</form>
					}
				</div>
			</div>
			<div class="card mt-3">
				<div class="card-body">
					<h5 class="card-title mb-4">Discounts</h5>
					<form method="post" action={ templ.URL(fmt.Sprintf("/admin/members/%d/updates/discounts", member.ID)) }>
						<script>
							document.addEventListener('DOMContentLoaded', (event) => {
								const handler = () => {
									let selector = document.getElementById('discount')
									let field = document.getElementById('family-email-field')
									if (selector.value === 'family') {
										field.style.display = 'block'
									} else {
										field.style.display = 'none'
										document.getElementById('family_email').value = ''
									}
								}

								document.getElementById('discount').addEventListener('change', event => {
									handler()
								})
								handler()
							})
						</script>
						<select class="form-select" id="discount" name="discount">
							<option value="" selected?={ member.DiscountType == nil || *member.DiscountType == "" }>None</option>
							<option value="military" selected?={ member.DiscountType != nil && *member.DiscountType == "military" }>Military</option>
							<option value="retired" selected?={ member.DiscountType != nil && *member.DiscountType == "retired" }>Retired</option>
							<option value="unemployed" selected?={ member.DiscountType != nil && *member.DiscountType == "unemployed" }>Unemployed</option>
							<option value="firstResponder" selected?={ member.DiscountType != nil && *member.DiscountType == "firstResponder" }>First Responder</option>
							<option value="educator" selected?={ member.DiscountType != nil && *member.DiscountType == "educator" }>Educator</option>
							<option value="emeritus" selected?={ member.DiscountType != nil && *member.DiscountType == "emeritus" }>Emeritus</option>
							<option value="family" selected?={ member.DiscountType != nil && *member.DiscountType == "family" }>Family</option>
						</select>
						<div class="mb-3 mt-3" id="family-email-field" style="display:none;">
							<label for="family_email" class="form-label">Root Family Account Email Address</label>
							<input type="email" class="form-control" id="family_email" name="family_email" value={ *member.RootFamilyEmail }/>
						</div>
						<p class="card-subtitle mt-4 text-muted">
							The discounted rate is only applied during Stripe checkout. Applying a new discount will not modify existing memberships until the member re-subscribes.
						</p>
						<button type="submit" class="btn btn-primary mt-4">Save</button>
					</form>
				</div>
			</div>
			<div class="card mt-3">
				<div class="card-body">
					<h5 class="card-title">
						Stripe
						if member.StripeStatus == nil || *member.StripeStatus != "active" {
							<span class="badge text-bg-danger">!</span>
						}
					</h5>
					<h6 class="card-subtitle mb-3 text-muted">
						Subscription status: 
						<b>
							if member.StripeStatus == nil || *member.StripeStatus == "" {
								unknown
							} else {
								{ *member.StripeStatus }
							}
						</b>
					</h6>
					if member.StripeSubID == nil || *member.StripeSubID == "" {
						<a href="#" class="btn btn-secondary disabled" aria-disabled="true">View subscription in Stripe</a>
					} else {
						<a href={ templ.URL("https://dashboard.stripe.com/subscriptions/" + *member.StripeSubID) } target="_blank" class="btn btn-primary">View subscription in Stripe</a>
					}
				</div>
			</div>
			if member.PaypalSubID != nil && *member.PaypalSubID != "" {
				<div class="card mt-3">
					<div class="card-body">
						<h5 class="card-title">Paypal</h5>
						if member.PaypalLastPayment != nil {
							<h6 class="card-subtitle mb-3 text-muted">
								Last payment processed:
								<b>{ time.Unix(*member.PaypalLastPayment, 0).Format(timeFormat) }</b>
							</h6>
						}
						if member.PaypalPrice != nil {
							<h6 class="card-subtitle mb-3 text-muted">
								Subscription price:
								<b>{ fmt.Sprintf("%.2f", *member.PaypalPrice) }</b>
							</h6>
						}
					</div>
				</div>
			}
			<div class="card mt-3">
				<div class="card-body">
					<h5 class="card-title mb-4">Designations</h5>
					<form method="post" action={ templ.URL(fmt.Sprintf("/admin/members/%d/updates/designations", member.ID)) }>
						<div class="form-check">
							<input type="checkbox" class="form-check-input" id="leadership" name="leadership" checked?={ member.Leadership }/>
							<label class="form-check-label" for="leadership">Leadership <i>(Conway admin access)</i></label>
						</div>
						<div class="form-check">
							<input type="checkbox" class="form-check-input" id="non-billable" name="non-billable" checked?={ member.NonBillable }/>
							<label class="form-check-label" for="non-billable">Non-billable <i>(landlord fobs, lifetime members, etc.)</i></label>
						</div>
						<button type="submit" class="btn btn-primary mt-4">Save</button>
					</form>
				</div>
			</div>
		</div>
	}
}
