package admin

import (
	"fmt"
	"github.com/TheLab-ms/conway/modules/bootstrap"
	"net/http"
)

type sort struct {
	OptionValue string
	Label       string
	Active      bool
}

func newSort(r *http.Request, label, option string) *sort {
	return &sort{Label: label, OptionValue: option, Active: r.URL.Query().Get("sort") == option}
}

func findActiveSort(sorts []*sort) string {
	for _, sort := range sorts {
		if sort.Active {
			return sort.OptionValue
		}
	}
	return ""
}

script navigateToSelf(link string) {
	window.location = link
}

type tableRowMeta struct {
	Title string
	Width int
}

type tableRow struct {
	SelfLink string // i.e. /things/this-one's-id
	Cells    []*tableCell
}

type tableCell struct {
	Text      string
	BadgeType string
}

templ (t tableCell) Render() {
	if t.BadgeType == "" {
		<span>{ t.Text }</span>
	} else {
		<span class={ fmt.Sprintf("badge text-bg-%s", t.BadgeType) }>{ t.Text }</span>
	}
}

templ renderAdminList(typeName, searchURL string, sorts []*sort) {
	@bootstrap.View() {
		@adminNav()
		<div class="container my-5">
			<h1 class="mb-4">{ typeName }</h1>
			<div class="card">
				<div class="card-header">
					<div class="d-flex justify-content-between align-items-center">
						<div class="d-flex align-items-center">
							<input
								type="search"
								class="form-control form-control-sm me-2"
								placeholder="Search..."
								style="width: 200px;"
								name="search"
								hx-post={ fmt.Sprintf("%s?sort=%s", searchURL, findActiveSort(sorts)) }
								hx-trigger="input changed delay:500ms, keyup[key=='Enter'], load"
								hx-target="#results"
								hx-include="[name='search']"
							/>
						</div>
						<form method="GET" action="" class="d-flex">
							<select name="sort" class="form-select form-select-sm me-2" style="width: 200px;" onchange="this.form.submit()">
								for _, sort := range sorts {
									<option value={ sort.OptionValue } selected?={ sort.Active }>{ sort.Label }</option>
								}
							</select>
						</form>
					</div>
				</div>
				<span id="results"></span>
			</div>
		</div>
	}
}

templ renderAdminListElements(rowMeta []*tableRowMeta, rows []*tableRow) {
	<div class="card-body p-0">
		<div class="table-responsive">
			<table class="table table-striped table-hover mb-0">
				<thead class="table-light">
					<tr>
						for _, meta := range rowMeta {
							<th class={ fmt.Sprintf("col-%d", meta.Width) }>{ meta.Title }</th>
						}
					</tr>
				</thead>
				<tbody>
					for _, row := range rows {
						<tr onclick={ navigateToSelf(row.SelfLink) } style="cursor: pointer;">
							for _, col := range row.Cells {
								<td>
									@col.Render()
								</td>
							}
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}
